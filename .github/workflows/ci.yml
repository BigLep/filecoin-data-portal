name: CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 10 * * 1"
  workflow_dispatch:

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    env:
      SPACESCOPE_TOKEN: ${{ secrets.SPACESCOPE_TOKEN }}
      DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
      motherduck_token: ${{ secrets.motherduck_token }}
      DATABRICKS_SERVER_HOSTNAME: ${{ secrets.DATABRICKS_SERVER_HOSTNAME }}
      DATABRICKS_HTTP_PATH: ${{ secrets.DATABRICKS_HTTP_PATH }}
      DATABRICKS_ACCESS_TOKEN: ${{ secrets.DATABRICKS_ACCESS_TOKEN }}

    steps:
        - name: Free Disk Space
          uses: jlumbroso/free-disk-space@main
          with:
            tool-cache: true
            android: true
            dotnet: true
            haskell: true
            large-packages: true
            docker-images: true
            swap-storage: true

        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: 3.11
            cache: pip

        - name: Install dependencies
          run: pip install -e .

        - name: Run
          run: make run

        - name: Install Quarto
          uses: quarto-dev/quarto-actions/setup@v2

        - name: Render
          run: make render

        - name: Install Node.js
          uses: actions/setup-node@v3
          with:
              node-version: 20

        - name: Install Fleek CLI
          run: npm i -g @fleekxyz/cli

        - name: Build & deploy sites
          run: fleek sites deploy

        - name: Export Tables
          run: make tables

        - name: Push to IPFS
          uses: filebase/ipfs-action@master
          id: ipfs
          with:
            path: portal/.quarto/_site
            service: filebase
            pinName: filecoin-data-portal-tables
            filebaseBucket: filecoin-data-portal
            filebaseKey: ${{ secrets.FILEBASE_KEY }}
            filebaseSecret: ${{ secrets.FILEBASE_SECRET }}
            key: filecoin-data-portal-db

        - name: Create CID file
          run: echo ${{ steps.ipfs.outputs.cid }} > data/IPFS_CID

        - name: Commit and Push
          run: |
            git config --global user.name "GitHub Action"
            git config --global user.email "actions@users.noreply.github.com"
            git config --global push.autoSetupRemote true
            git add data/IPFS_CID
            if git diff-index --quiet HEAD --; then
              echo "No changes to commit"
            else
              git commit -m "chore: :id: Update CID"
              git push
            fi
